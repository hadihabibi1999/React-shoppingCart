{"ast":null,"code":"import _objectSpread from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hadi/Desktop/React/react-js/src/components/counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counters);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counters)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    _this.handleIncrement = function (counter) {\n      var counters = _toConsumableArray(_this.state.counters);\n\n      var index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    _this.handleReset = function () {\n      var counters = _this.state.counters.map(function (c) {\n        c.value = 0;\n        return c;\n      });\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    _this.deleteHandler = function (counterId) {\n      var counters = _this.state.counters.filter(function (c) {\n        return c.id !== counterId;\n      });\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn btn-sm btn-primary m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Reset\"), this.state.counters.map(function (counter) {\n        return React.createElement(Counter, {\n          key: counter.id,\n          onDelete: _this2.deleteHandler,\n          counter: counter,\n          onIncrement: _this2.handleIncrement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Counters;\n}(Component);\n\nexport default Counters;","map":{"version":3,"sources":["/Users/hadi/Desktop/React/react-js/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleReset","map","c","deleteHandler","counterId","filter"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAC,CACL;AAAEC,QAAAA,EAAE,EAAC,CAAL;AAASC,QAAAA,KAAK,EAAC;AAAf,OADK,EAEL;AAAED,QAAAA,EAAE,EAAC,CAAL;AAASC,QAAAA,KAAK,EAAC;AAAf,OAFK,EAGL;AAAED,QAAAA,EAAE,EAAC,CAAL;AAASC,QAAAA,KAAK,EAAC;AAAf,OAHK,EAIL;AAAED,QAAAA,EAAE,EAAC,CAAL;AAASC,QAAAA,KAAK,EAAC;AAAf,OAJK;AADL,K;;UAQPC,e,GAAkB,UAAAC,OAAO,EAAI;AAC1B,UAAMJ,QAAQ,sBAAO,MAAKD,KAAL,CAAWC,QAAlB,CAAd;;AACA,UAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,qBAAoBD,OAApB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;;AACA,YAAKK,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACF,K;;UACDQ,W,GAAY,YAAI;AACb,UAAMR,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwB,UAAAC,CAAC,EAAE;AACxCA,QAAAA,CAAC,CAACR,KAAF,GAAQ,CAAR;AACA,eAAOQ,CAAP;AACH,OAHgB,CAAjB;;AAIA,YAAKH,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACF,K;;UAEDW,a,GAAgB,UAAAC,SAAS,EAAI;AAC3B,UAAMZ,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA2B,UAAAH,CAAC;AAAA,eAAEA,CAAC,CAACT,EAAF,KAAOW,SAAT;AAAA,OAA5B,CAAjB;;AACA,YAAKL,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACD,K;;;;;;;6BACO;AAAA;;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,OAAO,EAAE,KAAKQ,WADd;AAEA,QAAA,SAAS,EAAC,4BAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAIK,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwB,UAACL,OAAD;AAAA,eACzB,oBAAC,OAAD;AACA,UAAA,GAAG,EAAEA,OAAO,CAACH,EADb;AAEA,UAAA,QAAQ,EAAE,MAAI,CAACU,aAFf;AAGA,UAAA,OAAO,EAAEP,OAHT;AAIA,UAAA,WAAW,EAAE,MAAI,CAACD,eAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,OAAxB,CAJL,CADA;AAcH;;;;EA3CkBP,S;;AA6CvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n    state = { \n        counters:[\n            { id:1 , value:0},\n            { id:2 , value:0},\n            { id:3 , value:0},\n            { id:4 , value:0 }\n        ]\n     }\n     handleIncrement = counter => {\n        const counters = [...this.state.counters];\n        const index = counters.indexOf(counter);\n        counters[index]={...counter};\n        counters[index].value++;\n        this.setState({counters});\n     }\n     handleReset=()=>{\n        const counters = this.state.counters.map(c=>{\n            c.value=0;\n            return c;\n        });\n        this.setState({counters});\n     };\n\n     deleteHandler = counterId => {\n       const counters = this.state.counters.filter(c=>c.id!==counterId);\n       this.setState({counters});\n     };\n    render() { \n        return (\n        <div>\n            <button \n            onClick={this.handleReset}\n            className=\"btn btn-sm btn-primary m-2\">Reset</button>\n            {this.state.counters.map((counter) => \n            <Counter \n            key={counter.id} \n            onDelete={this.deleteHandler} \n            counter={counter}\n            onIncrement={this.handleIncrement}\n            />)}\n        </div>\n        );\n    }\n}\nexport default Counters;"]},"metadata":{},"sourceType":"module"}