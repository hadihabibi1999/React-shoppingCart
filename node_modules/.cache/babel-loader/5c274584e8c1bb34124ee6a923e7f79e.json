{"ast":null,"code":"import _classCallCheck from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hadi/Desktop/React/react-js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hadi/Desktop/React/react-js/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: _this.props.value\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.color(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.formatCounter()), React.createElement(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"color\",\n    value: function color() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCounter\",\n    value: function formatCounter() {\n      var count = this.state.count;\n      return count === 0 ? \"zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/hadi/Desktop/React/react-js/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","props","value","handleIncrement","setState","color","formatCounter","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAC,MAAKC,KAAL,CAAWC;AADb,K;;UAGRC,e,GAAkB,YAAM;AACpB,YAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAC,MAAKD,KAAL,CAAWC,KAAX,GAAiB;AAAxB,OAAd;AACH,K;;;;;;;6BAEQ;AAEL,aACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,KAAKK,KAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKC,aAAL,EAAhC,CADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKH,eAAtB;AAAuC,QAAA,SAAS,EAAC,0BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADL;AAMH;;;4BAEQ;AACL,UAAII,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKR,KAAL,CAAWC,KAAX,KAAmB,CAApB,GAAyB,SAAzB,GAAqC,SAA/C;AACA,aAAOO,OAAP;AACH;;;oCAEc;AAAA,UACHP,KADG,GACM,KAAKD,KADX,CACHC,KADG;AAEV,aAAOA,KAAK,KAAG,CAAR,GAAY,MAAZ,GAAqBA,KAA5B;AACJ;;;;EA3BiBH,S;;AA+BtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = { \n        count:this.props.value\n     }\n    handleIncrement = () => {\n        this.setState({count:this.state.count+1})\n    }\n    \n    render() { \n       \n        return(\n             <div>\n                 <span className={this.color()}>{this.formatCounter()}</span>\n                 <button onClick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\n             </div> \n        );\n    }\n\n     color() {\n        let classes = \"badge m-2 badge-\";\n        classes+= (this.state.count===0) ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCounter(){\n         const {count} = this.state;\n         return count===0 ? \"zero\" : count; \n    }\n\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}